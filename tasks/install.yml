---
- name: Assert usage of systemd as an init system
  assert:
    that: ansible_service_mgr == 'systemd'
    msg: "This role only works with systemd"

- name: Get systemd version
  command: systemctl --version
  changed_when: false
  check_mode: false
  register: __systemd_version
  tags:
    - skip_ansible_lint

- name: Install GnuPG for deadsnakes apt
  apt:
    update_cache: true
    cache_valid_time: 1800
    name:
      - gnupg
    state: present

- name: Add repo to install other python versions
  apt_repository:
    repo: ppa:deadsnakes/ppa
  register: deadsnakes_repo_result

- name: Update cache when new source is added
  apt:
    update_cache: true
  when: deadsnakes_repo_result.changed
  tags:
    - skip_ansible_lint  # we do want to have this reloaded here and now

- name: Install dependencies
  apt:
    update_cache: false
    name:
      - "python{{ query_exporter_python }}"
      - "python{{ query_exporter_python }}-dev"
      - build-essential
      - curl
      - default-libmysqlclient-dev
      - libpq-dev
      - unixodbc-dev
      - unzip
      - python3
      - virtualenv
      - python3-pip
      - git
    state: present

- name: Create the application dir
  git:
    repo: "{{ query_exporter_sources }}"
    dest: "{{ query_exporter_location }}"
    version: "{{ query_exporter_version }}"
    force: true

- name: Materialize pip requirements across
  template:
    src: requirements.txt.j2
    dest: "{{ query_exporter_runtime }}/requirements.txt"
    mode: "755"
  register: pip_requirements_result

- name: install runtime pip dependencies (if changed)
  pip:
    virtualenv: "{{ query_exporter_virtualenv }}"
    virtualenv_python: "python{{ query_exporter_python }}"
    requirements: "{{ query_exporter_runtime }}/requirements.txt"
  when: pip_requirements_result.changed
  tags:
    - skip_ansible_lint  # we do want to have this trigger conditionally in this exact moment

- name: Copy starter file template
  template:
    src: start.sh.j2
    dest: "{{ query_exporter_runtime }}/start.sh"
    mode: "u+x,g+x,o+x"
  notify: Restart query exporter

- name: Copy service file template
  template:
    src: service.j2
    dest: "{{ query_exporter_service_file }}"
    mode: "755"
  notify: Restart query exporter

- name: Enable the custom service
  service:
    name: "{{ query_exporter_service_name }}.service"
    enabled: true

- name: Start the custom service
  service:
    name: "{{ query_exporter_service_name }}.service"
    state: started

# make sure the service has actually (re-)booted at this point
- name: Flush Handlers.
  meta: flush_handlers
